#!/bin/bash
set -o errexit
set -o nounset
set -o noglob
set -o pipefail

err() {
  echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $@" >&2
}

debug() {
    if [[ "${DEBUG}" = "true" ]]; then
        echo "DEBUG: $@"
    fi
}

readonly SCRIPT_DIR=$(cd $(dirname "$0") && pwd)
readonly MAIN_DIR="${SCRIPT_DIR}/.."
readonly CURRENT_DIR=$(pwd)

# project name will be default d1-dev
# if you really know what you're doing, set the GCE_PROJECT_NAME env variable
# ideally all images are deployed to same repository -- d1-dev seems like a fine choice
#: {GCE_PROJECT_NAME:="d1-dev"}
readonly GCE_PROJECT_NAME=${GCE_PROJECT_NAME:-"d1-dev"}
# likewise, change only if you know what you're doing -- us will probably be closest default for a while
readonly CLOUD_CONTAINER_REGISTRY=${CLOUD_CONTAINER_REGISTRY:-"us.gcr.io"}

readonly DEBUG=${DEBUG:-"false"}


readonly image_name=${1:-"d1/kingpick_cli"}
readonly version=${2:-"latest"}
readonly gcloud_registry_json_key=${3:-"${MAIN_DIR}/pkey.json"}

readonly container_tag="${image_name}:${version}"

if [[ ! -e "${gcloud_registry_json_key}" || ! -s "${gcloud_registry_json_key}" || ! -r "${gcloud_registry_json_key}" ]]; then
  err "File ${gcloud_registry_json_key} is not valid"
  exit 1
fi

IFS="/" read -ra split_string <<< "${image_name}"
readonly container_name="${split_string[1]:-kinkpick_cli}"

readonly external_image_id="${CLOUD_CONTAINER_REGISTRY}/${GCE_PROJECT_NAME}/${container_name}:${version}"
readonly latest_external_image_id="${CLOUD_CONTAINER_REGISTRY}/${GCE_PROJECT_NAME}/${container_name}:latest"


docker build -t "${container_tag}" -- "${MAIN_DIR}"
docker tag -f "${container_tag}" "${external_image_id}"
gcloud components update -q
gcloud auth activate-service-account --key-file "${gcloud_registry_json_key}" --project "${GCE_PROJECT_NAME}" --account "${SERVICE_ACCOUNT}" -q
gcloud docker --project "${GCE_PROJECT_NAME}" --account "${SERVICE_ACCOUNT}" -- push "${external_image_id}" 
docker tag -f "${external_image_id}" "${latest_external_image_id}"
gcloud docker --project "${GCE_PROJECT_NAME}" --account "${SERVICE_ACCOUNT}" --  push "${latest_external_image_id}" 


